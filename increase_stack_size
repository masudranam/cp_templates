#include <bits/stdc++.h>
using namespace std;

void solve(){

}

void main_() {
   int t = 1;
   cin >> t;
   while(t--){
      solve();
   }
}
static void run_with_stack_size(void (*func)(void), size_t stsize) {
    char *stack, *send;
    stack = (char *)malloc(stsize);
    send = stack + stsize - 16;
    send = (char *)((uintptr_t)send & ~0xF);
   
    asm volatile(
        "mov %%rsp, (%0)\n" 
        "mov %0, %%rsp\n"  
        :
        : "r"(send)
        : "memory");
    func();
    asm volatile("mov (%0), %%rsp\n" : : "r"(send) : "memory");
    free(stack);
}
int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    run_with_stack_size(main_, 1024 * 1024 * 1024); // run with a 1 GiB stack
    return 0;
}
